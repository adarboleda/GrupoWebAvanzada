{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Tiki Taka - Sistema de Ventas API",
		"description": "Colección de Postman para probar la API REST del sistema de ventas Tiki Taka.\n\nArquitectura MVC:\n- Modelo: VentasModel.js (MySQL)\n- Vista: React (Frontend)\n- Controlador: VentasController.js (API REST)\n\nBase URL: http://localhost:3000/api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Verificar Conexión",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/test",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"test"
					]
				},
				"description": "Verifica que el servidor backend esté funcionando correctamente y que la conexión a la base de datos MySQL esté activa."
			},
			"response": [
				{
					"name": "Conexión Exitosa",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"test"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"mensaje\": \"API funcionando correctamente\",\n    \"baseDatos\": \"Conexión exitosa\"\n}"
				}
			]
		},
		{
			"name": "Obtener Todas las Ventas",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/ventas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ventas"
					]
				},
				"description": "Obtiene el listado completo de todas las ventas registradas en el sistema.\n\nRetorna un array de objetos con:\n- id: Identificador único\n- fecha: Fecha de la venta\n- monto_vendido: Monto total vendido\n- tipo_venta: Clasificación (A, B o C)"
			},
			"response": [
				{
					"name": "Lista de Ventas",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/ventas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"ventas"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"fecha\": \"2025-10-20T05:00:00.000Z\",\n        \"monto_vendido\": 1500.00,\n        \"tipo_venta\": \"A\"\n    },\n    {\n        \"id\": 2,\n        \"fecha\": \"2025-10-21T05:00:00.000Z\",\n        \"monto_vendido\": 750.50,\n        \"tipo_venta\": \"B\"\n    },\n    {\n        \"id\": 3,\n        \"fecha\": \"2025-10-22T05:00:00.000Z\",\n        \"monto_vendido\": 300.00,\n        \"tipo_venta\": \"C\"\n    }\n]"
				}
			]
		},
		{
			"name": "Crear Venta Tipo A (>$1000)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Venta creada correctamente\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tipo_venta).to.eql('A');",
							"    pm.expect(jsonData.monto_vendido).to.be.above(1000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fecha\": \"2025-10-25\",\n    \"monto_vendido\": 1500.00\n}"
				},
				"url": {
					"raw": "{{base_url}}/ventas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ventas"
					]
				},
				"description": "Crea una nueva venta con monto mayor a $1000.\n\nClasificación automática: TIPO A\n\nCampos requeridos:\n- fecha: Formato YYYY-MM-DD\n- monto_vendido: Número decimal > 1000"
			},
			"response": []
		},
		{
			"name": "Crear Venta Tipo B ($500-$1000)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Venta clasificada como Tipo B\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tipo_venta).to.eql('B');",
							"    pm.expect(jsonData.monto_vendido).to.be.within(500, 1000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fecha\": \"2025-10-25\",\n    \"monto_vendido\": 750.50\n}"
				},
				"url": {
					"raw": "{{base_url}}/ventas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ventas"
					]
				},
				"description": "Crea una nueva venta con monto entre $500 y $1000.\n\nClasificación automática: TIPO B\n\nCampos requeridos:\n- fecha: Formato YYYY-MM-DD\n- monto_vendido: Número decimal entre 500 y 1000"
			},
			"response": []
		},
		{
			"name": "Crear Venta Tipo C (<$500)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Venta clasificada como Tipo C\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tipo_venta).to.eql('C');",
							"    pm.expect(jsonData.monto_vendido).to.be.below(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fecha\": \"2025-10-25\",\n    \"monto_vendido\": 250.00\n}"
				},
				"url": {
					"raw": "{{base_url}}/ventas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ventas"
					]
				},
				"description": "Crea una nueva venta con monto menor a $500.\n\nClasificación automática: TIPO C\n\nCampos requeridos:\n- fecha: Formato YYYY-MM-DD\n- monto_vendido: Número decimal < 500"
			},
			"response": []
		},
		{
			"name": "Obtener Estadísticas",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/ventas/estadisticas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ventas",
						"estadisticas"
					]
				},
				"description": "Obtiene las estadísticas agrupadas de todas las ventas.\n\nRetorna:\n- total: Cantidad total de ventas\n- montoTotal: Suma de todos los montos\n- tipoA/B/C: Cantidad y monto por cada categoría"
			},
			"response": [
				{
					"name": "Estadísticas Completas",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/ventas/estadisticas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"ventas",
								"estadisticas"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"total\": 15,\n    \"montoTotal\": 12500.75,\n    \"tipoA\": {\n        \"cantidad\": 5,\n        \"monto\": 7500.00\n    },\n    \"tipoB\": {\n        \"cantidad\": 6,\n        \"monto\": 4000.50\n    },\n    \"tipoC\": {\n        \"cantidad\": 4,\n        \"monto\": 1000.25\n    }\n}"
				}
			]
		},
		{
			"name": "Eliminar Todas las Ventas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Mensaje de confirmación\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('mensaje');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/ventas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ventas"
					]
				},
				"description": "⚠️ PRECAUCIÓN: Elimina TODAS las ventas de la base de datos.\n\nEste endpoint es útil para:\n- Limpiar datos de prueba\n- Resetear el sistema\n- Preparar para nuevas pruebas\n\nNo se puede deshacer esta acción."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api",
			"type": "string"
		}
	]
}
