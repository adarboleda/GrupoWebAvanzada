{"ast":null,"code":"var _jsxFileName = \"C:\\\\ESPE\\\\WebAvanzada\\\\GrupoWebAvanzada\\\\3.salarios_orm\\\\empleados-front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EmpleadoForm from \"./components/EmpleadoForm.js\";\nimport EmpleadosList from \"./components/EmpleadosList.js\";\nimport EmpleadoDetalle from \"./components/EmpleadoDetalle.js\";\nimport * as empleadoService from \"./services/empleadoService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [empleados, setEmpleados] = useState([]);\n  const [editEmpleado, setEditEmpleado] = useState(null);\n  const [detalle, setDetalle] = useState(null);\n\n  // Obtener todos los empleados del backend usando el servicio\n  const obtenerEmpleados = async () => {\n    try {\n      const data = await empleadoService.obtenerTodosLosEmpleados();\n      setEmpleados(data);\n    } catch (error) {\n      alert(\"Error al obtener empleados\");\n    }\n  };\n  useEffect(() => {\n    obtenerEmpleados();\n  }, []);\n\n  // Crear o actualizar empleado usando el servicio\n  const guardarEmpleado = async empleado => {\n    try {\n      if (editEmpleado) {\n        // Actualizar empleado existente\n        await empleadoService.actualizarEmpleado(editEmpleado.id, empleado);\n      } else {\n        // Crear nuevo empleado\n        await empleadoService.crearEmpleado(empleado);\n      }\n      obtenerEmpleados();\n      setEditEmpleado(null);\n      setDetalle(null); // Limpia detalle\n    } catch (error) {\n      alert(\"Error al guardar el empleado\");\n    }\n  };\n\n  // Eliminar empleado usando el servicio\n  const eliminarEmpleado = async id => {\n    if (!window.confirm(\"¿Eliminar este empleado?\")) return;\n    try {\n      await empleadoService.eliminarEmpleado(id);\n      obtenerEmpleados();\n      setDetalle(null); // Limpia detalle\n    } catch (error) {\n      alert(\"Error al eliminar el empleado\");\n    }\n  };\n\n  // Ver detalle del salario usando el servicio\n  const verDetalle = async empleado => {\n    try {\n      const data = await empleadoService.obtenerSalarioEmpleado(empleado.id);\n      setDetalle(data);\n    } catch (error) {\n      alert(\"No se pudo obtener el detalle del salario.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gesti\\xF3n de Salarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmpleadoForm, {\n      onGuardar: guardarEmpleado,\n      editEmpleado: editEmpleado,\n      onCancelEdit: () => setEditEmpleado(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmpleadosList, {\n      empleados: empleados,\n      onEliminar: eliminarEmpleado,\n      onEditar: setEditEmpleado,\n      onVer: verDetalle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), detalle && detalle.total !== undefined && /*#__PURE__*/_jsxDEV(EmpleadoDetalle, {\n      detalle: detalle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UFEpXeLuAobQWnbhoXBsIHp2rC4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EmpleadoForm","EmpleadosList","EmpleadoDetalle","empleadoService","jsxDEV","_jsxDEV","App","_s","empleados","setEmpleados","editEmpleado","setEditEmpleado","detalle","setDetalle","obtenerEmpleados","data","obtenerTodosLosEmpleados","error","alert","guardarEmpleado","empleado","actualizarEmpleado","id","crearEmpleado","eliminarEmpleado","window","confirm","verDetalle","obtenerSalarioEmpleado","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onGuardar","onCancelEdit","onEliminar","onEditar","onVer","total","undefined","_c","$RefreshReg$"],"sources":["C:/ESPE/WebAvanzada/GrupoWebAvanzada/3.salarios_orm/empleados-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EmpleadoForm from \"./components/EmpleadoForm.js\";\r\nimport EmpleadosList from \"./components/EmpleadosList.js\";\r\nimport EmpleadoDetalle from \"./components/EmpleadoDetalle.js\";\r\nimport * as empleadoService from \"./services/empleadoService.js\";\r\n\r\nfunction App() {\r\n  const [empleados, setEmpleados] = useState([]);\r\n  const [editEmpleado, setEditEmpleado] = useState(null);\r\n  const [detalle, setDetalle] = useState(null);\r\n\r\n  // Obtener todos los empleados del backend usando el servicio\r\n  const obtenerEmpleados = async () => {\r\n    try {\r\n      const data = await empleadoService.obtenerTodosLosEmpleados();\r\n      setEmpleados(data);\r\n    } catch (error) {\r\n      alert(\"Error al obtener empleados\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    obtenerEmpleados();\r\n  }, []);\r\n\r\n  // Crear o actualizar empleado usando el servicio\r\n  const guardarEmpleado = async (empleado) => {\r\n    try {\r\n      if (editEmpleado) {\r\n        // Actualizar empleado existente\r\n        await empleadoService.actualizarEmpleado(editEmpleado.id, empleado);\r\n      } else {\r\n        // Crear nuevo empleado\r\n        await empleadoService.crearEmpleado(empleado);\r\n      }\r\n      obtenerEmpleados();\r\n      setEditEmpleado(null);\r\n      setDetalle(null); // Limpia detalle\r\n    } catch (error) {\r\n      alert(\"Error al guardar el empleado\");\r\n    }\r\n  };\r\n\r\n  // Eliminar empleado usando el servicio\r\n  const eliminarEmpleado = async (id) => {\r\n    if (!window.confirm(\"¿Eliminar este empleado?\")) return;\r\n    try {\r\n      await empleadoService.eliminarEmpleado(id);\r\n      obtenerEmpleados();\r\n      setDetalle(null); // Limpia detalle\r\n    } catch (error) {\r\n      alert(\"Error al eliminar el empleado\");\r\n    }\r\n  };\r\n\r\n  // Ver detalle del salario usando el servicio\r\n  const verDetalle = async (empleado) => {\r\n    try {\r\n      const data = await empleadoService.obtenerSalarioEmpleado(empleado.id);\r\n      setDetalle(data);\r\n    } catch (error) {\r\n      alert(\"No se pudo obtener el detalle del salario.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\" }}>\r\n      <h1>Gestión de Salarios</h1>\r\n\r\n      <EmpleadoForm\r\n        onGuardar={guardarEmpleado}\r\n        editEmpleado={editEmpleado}\r\n        onCancelEdit={() => setEditEmpleado(null)}\r\n      />\r\n\r\n      <EmpleadosList\r\n        empleados={empleados}\r\n        onEliminar={eliminarEmpleado}\r\n        onEditar={setEditEmpleado}\r\n        onVer={verDetalle}\r\n      />\r\n\r\n      {/* Mostrar detalle solo si existe */}\r\n      {detalle && detalle.total !== undefined && (\r\n        <EmpleadoDetalle detalle={detalle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}